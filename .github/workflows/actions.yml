name: Auth Service CI/CD

on:
  push:
    branches: [ main ] 
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/auth-service 

jobs:
  build-and-push-to-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}

    - name: Build and push Docker image to GHCR
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


# Quando tivermos acesso ao azure, usaremos essa configuração... Por enquanto estará no Render 
# name: Auth Service CI/CD

# on:
#   push:
#     branches: [ main ] # Ou a branch que você usa para DEV
#   pull_request:
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Environment to deploy to'
#         required: true
#         default: 'DEV' # Padrão para o ambiente DEV
#         type: choice
#         options:
#         - DEV
#         - PRODUCTION

# env:
#   PYTHON_VERSION: "3.11"
#   REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
#   IMAGE_NAME: auth-service

# jobs:
#   build-test-deploy:
#     runs-on: ubuntu-latest
#     environment: ${{ github.event.inputs.environment || 'DEV' }}

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Log in to ACR
#       uses: azure/docker-login@v2
#       with:
#         login-server: ${{ env.REGISTRY }}
#         username: ${{ secrets.ACR_USERNAME }}
#         password: ${{ secrets.ACR_PASSWORD }}

#     - name: Build & push image
#       run: |
#         docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
#         docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

#     - name: Deploy to Azure Web App
#       uses: azure/webapps-deploy@v3
#       with:
#         # Nome do App Service carregado do secret do Environment DEV
#         app-name: ${{ secrets.POSTECH_AUTH_WEBAPP_NAME }} 
#         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
#         # publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # Adicionar se necessário